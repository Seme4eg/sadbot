#+title: sadbot documentation

- [[https://discord.com/developers/applications][discord applications page]]
- [[https://discord.com/api/oauth2/authorize?client_id=1104687184537190441&permissions=274881440832&scope=bot][bot invite link]]

** Deps
- yt-dlp (maybe replace with some [[https://github.com/iawia002/lux][go-based]] [[https://pkg.go.dev/search?q=youtube-dl&m=package][analogue]](s)?)
- cgo-git (AUR), *todo*: find opus driver without other deps?

Optional dependencies for yt-dlp
    ffmpeg: for video post-processing [installed]
    rtmpdump: for rtmp streams support
    atomicparsley: for embedding thumbnails into m4a files
    aria2: for using aria2 as external downloader
    python-mutagen: For embedding thumbnail in certain formats [installed]
    python-pycryptodomex: For decrypting AES-128 HLS streams and various other data
    python-websockets: For downloading over websocket

** Prototyping

*Playback*: 
!play <title|URL> - require user in voice, join bot
!repeat single/all/off
!shuffle/reshuffle

!history — Show recently played sounds.

*subject to change, but for require presence:*
- !np (current) — Showing sound the bot is playing.
- !queue — Shows current queue.

*no presence:*
- help        - shows all available commands
- info        - shows bot info and statistics

!save — Save current queue (within current bot session?)
!radio — Endless auto-generated radio based on selected genre.

pick ?
debug ?

** Todos
#+begin_src go
// logs errors to STDERR
var ErrLog = func(str string, err error) {
	prefix := "audio module: " + str
	if err != nil {
		os.Stderr.WriteString(prefix + ": " + err.Error())
	} else {
		os.Stderr.WriteString(prefix)
	}
}
#+end_src

- respond in an [[https://0x2142.com/how-to-discordgo-bot/#generating-a-discord-embed-message][embed format]]?
- [[https://github.com/yt-dlp/yt-dlp#usage-and-options][yt-dlp]]
- change config format to [[https://github.com/lon9/discord-generalized-sound-bot/blob/master/bot/bot.go#L324][yaml]]
- [[https://github.com/bwmarrin/discordgo/wiki/Awesome-DiscordGo][references]]
- session sharding
- fix ~SendPCM error: Audio module error: PCM Channel closed~ log after each track
- make custom error interface for each package?
